// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	sctrl "github.com/fdelbos/sctrl"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Dispatcher is an autogenerated mock type for the Dispatcher type
type Dispatcher struct {
	mock.Mock
}

// Request provides a mock function with given fields: timeout, handler
func (_m *Dispatcher) Request(timeout time.Duration, handler sctrl.ResponseHandler) error {
	ret := _m.Called(timeout, handler)

	var r0 error
	if rf, ok := ret.Get(0).(func(time.Duration, sctrl.ResponseHandler) error); ok {
		r0 = rf(timeout, handler)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDispatcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewDispatcher creates a new instance of Dispatcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDispatcher(t mockConstructorTestingTNewDispatcher) *Dispatcher {
	mock := &Dispatcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
